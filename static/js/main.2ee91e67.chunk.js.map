{"version":3,"sources":["components/ContactsItem/ContactsItem.module.css","redux/phonebook/phonebook-actions.js","components/ContactsItem/ContactsItem.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","connect","dispatch","onDelete","phonebookActions","filtered","map","type","className","delete_button","onClick","state","value","contacts","filter","onChange","e","target","ContactForm","handleChange","setState","onHandleSubmit","preventDefault","props","find","item","alert","onSubmit","form","this","form_input","button","Component","items","text","App","console","log","length","isContactIncludes","allContacts","normalizedFilter","toLowerCase","includes","getFilteredContacts","createReducer","actions","action","index","findIndex","slice","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2ee91e67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_button\":\"ContactsItem_delete_button__pU2mX\"};","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('phonebook/Add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction('phonebook/Delete');\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import React from 'react';\r\nimport { delete_button } from './ContactsItem.module.css';\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nconst ContactsItem = ({ filtered, onDelete }) => {\r\n  return filtered.map(({ name, number, id }) => {\r\n    return (\r\n      <li key={id} name={name}>\r\n        {name}: {number}\r\n        <button\r\n          type=\"button\"\r\n          className={delete_button}\r\n          onClick={() => onDelete(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(phonebookActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsItem);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(phonebookActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { form, button, form_input } from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport phonebookActions from '../../redux/phonebook/phonebook-actions';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    const found = this.props.contacts.find(item => {\r\n      return item.name === this.state.name || item.number === this.state.number;\r\n    });\r\n    if (found) {\r\n      alert('Такой контакт уже есть!');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={form} onSubmit={this.onHandleSubmit}>\r\n        <h4>Name</h4>\r\n        <input\r\n          className={form_input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        ></input>\r\n        <h4>Number</h4>\r\n        <input\r\n          className={form_input}\r\n          type=\"number\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        ></input>\r\n        <button type=\"submit\" className={button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: text => dispatch(phonebookActions.addContact(text)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContactsItem from './components/ContactsItem/ContactsItem';\nimport Filter from './components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\n\nclass App extends Component {\n  render() {\n    console.log(this.props.contacts.length > 0);\n    return (\n      <div className=\"container\">\n        <h2>Phonebook</h2>\n        <ContactForm />\n        {this.props.isContactIncludes && (\n          <>\n            <h2>Contacts</h2>\n            <Filter />\n            <ul className=\"contacts\">\n              <ContactsItem filtered={this.props.contacts} />\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst getFilteredContacts = (allContacts, filter) => {\n  // if (!filter) {\n  //   return allContacts;\n  // }\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(item =>\n    item.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { filter, items } = state.contacts;\n  const visibleContacts = getFilteredContacts(items, filter);\n  return {\n    contacts: visibleContacts,\n    filter,\n    isContactIncludes: items.length > 0,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContact]: (state, action) => {\r\n    const index = state.findIndex(item => item.id === action.payload);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1bBdx\",\"form_input\":\"ContactForm_form_input__yb3Sl\",\"button\":\"ContactForm_button__2v5dq\"};"],"sourceRoot":""}